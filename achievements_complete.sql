-- –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
-- –í—ã–ø–æ–ª–Ω–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –≤ Supabase SQL Editor

-- –û—á–∏—Å—Ç–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ç–∞–±–ª–∏—Ü –∏ —Ñ—É–Ω–∫—Ü–∏–π (–µ—Å–ª–∏ –µ—Å—Ç—å)
DROP TABLE IF EXISTS family_achievement_stats CASCADE;
DROP TABLE IF EXISTS achievement_progress CASCADE;
DROP TABLE IF EXISTS user_achievements CASCADE;
DROP TABLE IF EXISTS achievements CASCADE;
DROP TABLE IF EXISTS achievement_types CASCADE;

-- –£–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π
DROP FUNCTION IF EXISTS check_and_award_achievements(INTEGER, BIGINT, TEXT, JSONB);
DROP FUNCTION IF EXISTS get_user_achievements(INTEGER, BIGINT);
DROP FUNCTION IF EXISTS get_family_achievement_stats(INTEGER);

-- –¢–∞–±–ª–∏—Ü–∞ —Ç–∏–ø–æ–≤ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
CREATE TABLE achievement_types (
    id SERIAL PRIMARY KEY,
    name TEXT NOT NULL UNIQUE,
    description TEXT NOT NULL,
    icon TEXT DEFAULT 'üèÜ',
    color TEXT DEFAULT '#FFD700',
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- –¢–∞–±–ª–∏—Ü–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
CREATE TABLE achievements (
    id SERIAL PRIMARY KEY,
    type_id INTEGER REFERENCES achievement_types(id) ON DELETE CASCADE,
    name TEXT NOT NULL,
    description TEXT NOT NULL,
    icon TEXT DEFAULT 'üèÜ',
    color TEXT DEFAULT '#FFD700',
    rarity TEXT DEFAULT 'common', -- common, rare, epic, legendary
    points INTEGER DEFAULT 10,
    coins_reward INTEGER DEFAULT 0,
    criteria JSONB NOT NULL, -- JSON —Å –∫—Ä–∏—Ç–µ—Ä–∏—è–º–∏ –ø–æ–ª—É—á–µ–Ω–∏—è
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- –¢–∞–±–ª–∏—Ü–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
CREATE TABLE user_achievements (
    id SERIAL PRIMARY KEY,
    family_id INTEGER REFERENCES families(id) ON DELETE CASCADE,
    user_id BIGINT NOT NULL,
    achievement_id INTEGER REFERENCES achievements(id) ON DELETE CASCADE,
    earned_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    progress_data JSONB, -- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ
    UNIQUE(family_id, user_id, achievement_id)
);

-- –¢–∞–±–ª–∏—Ü–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π (–¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞)
CREATE TABLE achievement_progress (
    id SERIAL PRIMARY KEY,
    family_id INTEGER REFERENCES families(id) ON DELETE CASCADE,
    user_id BIGINT NOT NULL,
    achievement_id INTEGER REFERENCES achievements(id) ON DELETE CASCADE,
    current_value INTEGER DEFAULT 0,
    target_value INTEGER NOT NULL,
    last_updated TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    progress_data JSONB, -- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ
    UNIQUE(family_id, user_id, achievement_id)
);

-- –¢–∞–±–ª–∏—Ü–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π —Å–µ–º—å–∏
CREATE TABLE family_achievement_stats (
    family_id INTEGER REFERENCES families(id) ON DELETE CASCADE PRIMARY KEY,
    total_achievements INTEGER DEFAULT 0,
    total_points INTEGER DEFAULT 0,
    total_coins_earned INTEGER DEFAULT 0,
    last_achievement_at TIMESTAMP WITH TIME ZONE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤
CREATE INDEX idx_achievements_type_id ON achievements(type_id);
CREATE INDEX idx_achievements_rarity ON achievements(rarity);
CREATE INDEX idx_user_achievements_family_id ON user_achievements(family_id);
CREATE INDEX idx_user_achievements_user_id ON user_achievements(user_id);
CREATE INDEX idx_user_achievements_achievement_id ON user_achievements(achievement_id);
CREATE INDEX idx_user_achievements_earned_at ON user_achievements(earned_at);
CREATE INDEX idx_achievement_progress_family_id ON achievement_progress(family_id);
CREATE INDEX idx_achievement_progress_user_id ON achievement_progress(user_id);
CREATE INDEX idx_achievement_progress_achievement_id ON achievement_progress(achievement_id);

-- –í–∫–ª—é—á–µ–Ω–∏–µ Row Level Security (RLS) –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
ALTER TABLE achievement_types ENABLE ROW LEVEL SECURITY;
ALTER TABLE achievements ENABLE ROW LEVEL SECURITY;
ALTER TABLE user_achievements ENABLE ROW LEVEL SECURITY;
ALTER TABLE achievement_progress ENABLE ROW LEVEL SECURITY;
ALTER TABLE family_achievement_stats ENABLE ROW LEVEL SECURITY;

-- –ü–æ–ª–∏—Ç–∏–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
CREATE POLICY "Enable all operations for authenticated users" ON achievement_types FOR ALL USING (true);
CREATE POLICY "Enable all operations for authenticated users" ON achievements FOR ALL USING (true);
CREATE POLICY "Enable all operations for authenticated users" ON user_achievements FOR ALL USING (true);
CREATE POLICY "Enable all operations for authenticated users" ON achievement_progress FOR ALL USING (true);
CREATE POLICY "Enable all operations for authenticated users" ON family_achievement_stats FOR ALL USING (true);

-- –¢—Ä–∏–≥–≥–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è updated_at –≤ —Ç–∞–±–ª–∏—Ü–µ family_achievement_stats
CREATE TRIGGER update_family_achievement_stats_updated_at 
    BEFORE UPDATE ON family_achievement_stats 
    FOR EACH ROW 
    EXECUTE FUNCTION update_updated_at_column();

-- –í—Å—Ç–∞–≤–∫–∞ —Ç–∏–ø–æ–≤ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
INSERT INTO achievement_types (name, description, icon, color) VALUES
('–°–µ—Ä–∏–∏ (Streaks)', '–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–¥—Ä—è–¥', 'üî•', '#FF6B6B'),
('–ö–æ–º–±–æ –∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏', '–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ –¥–µ–π—Å—Ç–≤–∏–π', '‚ö°', '#4ECDC4'),
('–û–∫–Ω–∞ –≤—Ä–µ–º–µ–Ω–∏', '–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞ –¥–µ–π—Å—Ç–≤–∏—è –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è', '‚è∞', '#45B7D1'),
('–†–∏—Ç–º –∏ —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç—å', '–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞ —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω—ã–π —É—Ö–æ–¥', 'üéµ', '#96CEB4'),
('–û–±—É—á–∞—é—â–∏–µ/–º—è–≥–∫–∏–µ', '–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–æ—â—Ä–µ–Ω–∏—è –æ–±—É—á–µ–Ω–∏—è', 'üìö', '#FFEAA7'),
('–†–µ–¥–∫–∏–µ/–∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–Ω—ã–µ', '–û—Å–æ–±—ã–µ –∏ —Ä–µ–¥–∫–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è', 'üíé', '#DDA0DD');

-- –í—Å—Ç–∞–≤–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
INSERT INTO achievements (type_id, name, description, icon, color, rarity, points, coins_reward, criteria) VALUES
-- –°–µ—Ä–∏–∏ –∫–æ—Ä–º–ª–µ–Ω–∏—è
(1, '–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏', '–ü–æ–∫–æ—Ä–º–∏–ª –º–∞–ª—ã—à–∞ 3 —Ä–∞–∑–∞ –ø–æ–¥—Ä—è–¥', 'üçº', '#FF6B6B', 'common', 10, 5, '{"type": "feeding_streak", "target": 3, "timeframe": "day"}'),
(1, '–†–µ–≥—É–ª—è—Ä–Ω—ã–π —É—Ö–æ–¥', '–ü–æ–∫–æ—Ä–º–∏–ª –º–∞–ª—ã—à–∞ 5 —Ä–∞–∑ –ø–æ–¥—Ä—è–¥', 'üçº', '#FF6B6B', 'rare', 25, 15, '{"type": "feeding_streak", "target": 5, "timeframe": "day"}'),
(1, '–ú–∞—Å—Ç–µ—Ä –∫–æ—Ä–º–ª–µ–Ω–∏—è', '–ü–æ–∫–æ—Ä–º–∏–ª –º–∞–ª—ã—à–∞ 7 —Ä–∞–∑ –ø–æ–¥—Ä—è–¥', 'üçº', '#FF6B6B', 'epic', 50, 30, '{"type": "feeding_streak", "target": 7, "timeframe": "day"}'),
(1, '–õ–µ–≥–µ–Ω–¥–∞ –∫–æ—Ä–º–ª–µ–Ω–∏—è', '–ü–æ–∫–æ—Ä–º–∏–ª –º–∞–ª—ã—à–∞ 10 —Ä–∞–∑ –ø–æ–¥—Ä—è–¥', 'üçº', '#FF6B6B', 'legendary', 100, 60, '{"type": "feeding_streak", "target": 10, "timeframe": "day"}'),

-- –°–µ—Ä–∏–∏ —Å–º–µ–Ω—ã –ø–æ–¥–≥—É–∑–Ω–∏–∫–æ–≤
(1, '–ß–∏—Å—Ç—é–ª—è', '–°–º–µ–Ω–∏–ª –ø–æ–¥–≥—É–∑–Ω–∏–∫ 3 —Ä–∞–∑–∞ –ø–æ–¥—Ä—è–¥', 'üë∂', '#4ECDC4', 'common', 10, 5, '{"type": "diaper_streak", "target": 3, "timeframe": "day"}'),
(1, '–ó–∞–±–æ—Ç–ª–∏–≤—ã–π —Ä–æ–¥–∏—Ç–µ–ª—å', '–°–º–µ–Ω–∏–ª –ø–æ–¥–≥—É–∑–Ω–∏–∫ 5 —Ä–∞–∑ –ø–æ–¥—Ä—è–¥', 'üë∂', '#4ECDC4', 'rare', 25, 15, '{"type": "diaper_streak", "target": 5, "timeframe": "day"}'),
(1, '–≠–∫—Å–ø–µ—Ä—Ç –ø–æ –ø–æ–¥–≥—É–∑–Ω–∏–∫–∞–º', '–°–º–µ–Ω–∏–ª –ø–æ–¥–≥—É–∑–Ω–∏–∫ 7 —Ä–∞–∑ –ø–æ–¥—Ä—è–¥', 'üë∂', '#4ECDC4', 'epic', 50, 30, '{"type": "diaper_streak", "target": 7, "timeframe": "day"}'),
(1, '–ú–∞—Å—Ç–µ—Ä —á–∏—Å—Ç–æ—Ç—ã', '–°–º–µ–Ω–∏–ª –ø–æ–¥–≥—É–∑–Ω–∏–∫ 10 —Ä–∞–∑ –ø–æ–¥—Ä—è–¥', 'üë∂', '#4ECDC4', 'legendary', 100, 60, '{"type": "diaper_streak", "target": 10, "timeframe": "day"}'),

-- –ö–æ–º–±–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
(2, '–ë—ã—Å—Ç—Ä–∞—è —Ä–µ–∞–∫—Ü–∏—è', '–°–º–µ–Ω–∏–ª –ø–æ–¥–≥—É–∑–Ω–∏–∫ –∏ –ø–æ–∫–æ—Ä–º–∏–ª –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç', '‚ö°', '#FFD700', 'common', 15, 10, '{"type": "combo", "target": 2, "timeframe": "15_minutes", "actions": ["diaper", "feeding"]}'),
(2, '–°—É–ø–µ—Ä –∫–æ–º–±–æ', '–í—ã–ø–æ–ª–Ω–∏–ª 3 —Ä–∞–∑–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏—è –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç', '‚ö°', '#FFD700', 'rare', 35, 25, '{"type": "combo", "target": 3, "timeframe": "30_minutes", "actions": ["diaper", "feeding", "bath"]}'),
(2, '–ú–∞—Å—Ç–µ—Ä –∫–æ–º–±–æ', '–í—ã–ø–æ–ª–Ω–∏–ª 4 —Ä–∞–∑–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏—è –≤ —Ç–µ—á–µ–Ω–∏–µ 1 —á–∞—Å–∞', '‚ö°', '#FFD700', 'epic', 75, 50, '{"type": "combo", "target": 4, "timeframe": "1_hour", "actions": ["diaper", "feeding", "bath", "activity"]}'),
(2, '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–æ–µ –∫–æ–º–±–æ', '–í—ã–ø–æ–ª–Ω–∏–ª 5 —Ä–∞–∑–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –≤ —Ç–µ—á–µ–Ω–∏–µ 2 —á–∞—Å–æ–≤', '‚ö°', '#FFD700', 'legendary', 150, 100, '{"type": "combo", "target": 5, "timeframe": "2_hours", "actions": ["diaper", "feeding", "bath", "activity", "sleep"]}'),

-- –û–∫–Ω–∞ –≤—Ä–µ–º–µ–Ω–∏
(3, '–†–∞–Ω–Ω—è—è –ø—Ç–∞—à–∫–∞', '–ü–æ–∫–æ—Ä–º–∏–ª –º–∞–ª—ã—à–∞ –¥–æ 7 —É—Ç—Ä–∞', 'üåÖ', '#45B7D1', 'common', 10, 5, '{"type": "time_window", "action": "feeding", "start_time": "00:00", "end_time": "07:00"}'),
(3, '–ù–æ—á–Ω–æ–π —Å—Ç—Ä–∞–∂', '–ü–æ–∫–æ—Ä–º–∏–ª –º–∞–ª—ã—à–∞ –º–µ–∂–¥—É 22:00 –∏ 06:00', 'üåô', '#45B7D1', 'rare', 25, 15, '{"type": "time_window", "action": "feeding", "start_time": "22:00", "end_time": "06:00"}'),
(3, '–ü–æ–ª–Ω–æ—á–Ω—ã–π –≥–µ—Ä–æ–π', '–°–º–µ–Ω–∏–ª –ø–æ–¥–≥—É–∑–Ω–∏–∫ –º–µ–∂–¥—É 00:00 –∏ 03:00', 'üåô', '#45B7D1', 'epic', 50, 30, '{"type": "time_window", "action": "diaper", "start_time": "00:00", "end_time": "03:00"}'),

-- –†–∏—Ç–º –∏ —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç—å
(4, '–†–∏—Ç–º–∏—á–Ω—ã–π —É—Ö–æ–¥', '–ö–æ—Ä–º–∏–ª –º–∞–ª—ã—à–∞ –∫–∞–∂–¥—ã–µ 3 —á–∞—Å–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è', 'üéµ', '#96CEB4', 'rare', 30, 20, '{"type": "rhythm", "action": "feeding", "interval_hours": 3, "target_count": 5}'),
(4, '–ò–¥–µ–∞–ª—å–Ω—ã–π —Ä–∏—Ç–º', '–ö–æ—Ä–º–∏–ª –º–∞–ª—ã—à–∞ –∫–∞–∂–¥—ã–µ 2.5 —á–∞—Å–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è', 'üéµ', '#96CEB4', 'epic', 60, 40, '{"type": "rhythm", "action": "feeding", "interval_hours": 2.5, "target_count": 6}'),
(4, '–ú–∞—Å—Ç–µ—Ä —Ä–∏—Ç–º–∞', '–ö–æ—Ä–º–∏–ª –º–∞–ª—ã—à–∞ –∫–∞–∂–¥—ã–µ 2 —á–∞—Å–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è', 'üéµ', '#96CEB4', 'legendary', 120, 80, '{"type": "rhythm", "action": "feeding", "interval_hours": 2, "target_count": 8}'),

-- –û–±—É—á–∞—é—â–∏–µ/–º—è–≥–∫–∏–µ
(5, '–ü–µ—Ä–≤—ã–π –¥–µ–Ω—å', '–ó–∞–ø–∏—Å–∞–ª –ø–µ—Ä–≤–æ–µ –∫–æ—Ä–º–ª–µ–Ω–∏–µ', 'üåü', '#FFEAA7', 'common', 5, 3, '{"type": "first_action", "action": "feeding"}'),
(5, '–ù–∞—á–∞–ª–æ –ø—É—Ç–∏', '–ó–∞–ø–∏—Å–∞–ª –ø–µ—Ä–≤—É—é —Å–º–µ–Ω—É –ø–æ–¥–≥—É–∑–Ω–∏–∫–∞', 'üåü', '#FFEAA7', 'common', 5, 3, '{"type": "first_action", "action": "diaper"}'),
(5, '–ü–µ—Ä–≤–æ–µ –∫—É–ø–∞–Ω–∏–µ', '–ó–∞–ø–∏—Å–∞–ª –ø–µ—Ä–≤–æ–µ –∫—É–ø–∞–Ω–∏–µ', 'üåü', '#FFEAA7', 'common', 5, 3, '{"type": "first_action", "action": "bath"}'),
(5, '–ü–µ—Ä–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', '–ó–∞–ø–∏—Å–∞–ª –ø–µ—Ä–≤—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', 'üåü', '#FFEAA7', 'common', 5, 3, '{"type": "first_action", "action": "activity"}'),
(5, '–ù–µ–¥–µ–ª—è –∑–∞–±–æ—Ç—ã', '–í–µ–ª —É—á–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 7 –¥–Ω–µ–π', 'üìÖ', '#FFEAA7', 'rare', 50, 30, '{"type": "consistency", "days": 7}'),
(5, '–ú–µ—Å—è—Ü –∑–∞–±–æ—Ç—ã', '–í–µ–ª —É—á–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –¥–Ω–µ–π', 'üìÖ', '#FFEAA7', 'epic', 200, 120, '{"type": "consistency", "days": 30}'),

-- –†–µ–¥–∫–∏–µ/–∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–Ω—ã–µ
(6, '–ó–æ–ª–æ—Ç–∞—è —Ä—É–∫–∞', '–ö–æ—Ä–º–∏–ª –º–∞–ª—ã—à–∞ —Ä–æ–≤–Ω–æ –≤ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è 5 —Ä–∞–∑ –ø–æ–¥—Ä—è–¥', 'üëë', '#DDA0DD', 'legendary', 200, 150, '{"type": "perfect_timing", "action": "feeding", "tolerance_minutes": 5, "streak": 5}'),
(6, '–ö—Ä–∏—Å—Ç–∞–ª—å–Ω–∞—è —á–∏—Å—Ç–æ—Ç–∞', '–°–º–µ–Ω–∏–ª –ø–æ–¥–≥—É–∑–Ω–∏–∫ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –∫–æ—Ä–º–ª–µ–Ω–∏—è 10 —Ä–∞–∑ –ø–æ–¥—Ä—è–¥', 'üíé', '#DDA0DD', 'legendary', 300, 200, '{"type": "perfect_sequence", "sequence": ["feeding", "diaper"], "streak": 10}'),
(6, '–ú–∞—Å—Ç–µ—Ä –≤—Å–µ—Ö –¥–µ–ª', '–ü–æ–ª—É—á–∏–ª –≤—Å–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ —Ç–∏–ø–∞', 'üèÜ', '#DDA0DD', 'legendary', 500, 300, '{"type": "collection_complete", "achievement_type": "all"}'),
(6, '–õ–µ–≥–µ–Ω–¥–∞ —Å–µ–º—å–∏', '–ü–æ–ª—É—á–∏–ª 50 –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π', 'üëë', '#DDA0DD', 'legendary', 1000, 500, '{"type": "total_count", "target": 50}'),
(6, '–ò–º–ø–µ—Ä–∞—Ç–æ—Ä –∑–∞–±–æ—Ç—ã', '–ü–æ–ª—É—á–∏–ª 100 –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π', 'üëë', '#DDA0DD', 'legendary', 2000, 1000, '{"type": "total_count", "target": 100}');

-- –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–µ–º–µ–π
INSERT INTO family_achievement_stats (family_id, total_achievements, total_points, total_coins_earned)
SELECT id, 0, 0, 0
FROM families
WHERE id NOT IN (SELECT family_id FROM family_achievement_stats);

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –≤—ã–¥–∞—á–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
CREATE OR REPLACE FUNCTION check_and_award_achievements(
    family_id_param INTEGER,
    user_id_param BIGINT,
    activity_type TEXT,
    activity_data JSONB DEFAULT '{}'::JSONB
)
RETURNS TABLE (
    achievement_id INTEGER,
    achievement_name TEXT,
    points INTEGER,
    coins_reward INTEGER,
    rarity TEXT
) AS $$
DECLARE
    achievement_record RECORD;
    progress_record RECORD;
    new_progress INTEGER;
    is_completed BOOLEAN;
BEGIN
    -- –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –∞–∫—Ç–∏–≤–Ω—ã–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º
    FOR achievement_record IN 
        SELECT a.id, a.name, a.points, a.coins_reward, a.rarity, a.criteria
        FROM achievements a
        WHERE a.is_active = TRUE
    LOOP
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–µ—Ä–∏–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
        CASE activity_type
            WHEN 'feeding' THEN
                -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∫–æ—Ä–º–ª–µ–Ω–∏—è
                IF achievement_record.criteria->>'type' = 'feeding_streak' THEN
                    -- –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å–µ—Ä–∏—é –∫–æ—Ä–º–ª–µ–Ω–∏–π
                    SELECT COUNT(*) INTO new_progress
                    FROM feedings f
                    WHERE f.family_id = family_id_param
                      AND f.timestamp >= NOW() - INTERVAL '1 day'
                    ORDER BY f.timestamp DESC;
                    
                    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ –ª–∏ —Ü–µ–ª—å
                    IF new_progress >= (achievement_record.criteria->>'target')::INTEGER THEN
                        is_completed := TRUE;
                    ELSE
                        is_completed := FALSE;
                    END IF;
                END IF;
                
            WHEN 'diaper' THEN
                -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–º–µ–Ω—ã –ø–æ–¥–≥—É–∑–Ω–∏–∫–æ–≤
                IF achievement_record.criteria->>'type' = 'diaper_streak' THEN
                    SELECT COUNT(*) INTO new_progress
                    FROM diapers d
                    WHERE d.family_id = family_id_param
                      AND d.timestamp >= NOW() - INTERVAL '1 day'
                    ORDER BY d.timestamp DESC;
                    
                    IF new_progress >= (achievement_record.criteria->>'target')::INTEGER THEN
                        is_completed := TRUE;
                    ELSE
                        is_completed := FALSE;
                    END IF;
                END IF;
                
            WHEN 'combo' THEN
                -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–±–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
                IF achievement_record.criteria->>'type' = 'combo' THEN
                    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–±–æ –≤ —Ç–µ—á–µ–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
                    SELECT COUNT(*) INTO new_progress
                    FROM (
                        SELECT timestamp FROM feedings WHERE family_id = family_id_param
                        UNION ALL
                        SELECT timestamp FROM diapers WHERE family_id = family_id_param
                    ) combined
                    WHERE timestamp >= NOW() - INTERVAL '15 minutes';
                    
                    IF new_progress >= (achievement_record.criteria->>'target')::INTEGER THEN
                        is_completed := TRUE;
                    ELSE
                        is_completed := FALSE;
                    END IF;
                END IF;
        END CASE;
        
        -- –ï—Å–ª–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –∏ –µ—â–µ –Ω–µ –ø–æ–ª—É—á–µ–Ω–æ
        IF is_completed THEN
            -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø–æ–ª—É—á–µ–Ω–æ –ª–∏ —É–∂–µ —ç—Ç–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ
            IF NOT EXISTS (
                SELECT 1 FROM user_achievements 
                WHERE family_id = family_id_param 
                  AND user_id = user_id_param 
                  AND achievement_id = achievement_record.id
            ) THEN
                -- –î–æ–±–∞–≤–ª—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ
                INSERT INTO user_achievements (family_id, user_id, achievement_id)
                VALUES (family_id_param, user_id_param, achievement_record.id);
                
                -- –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–µ–º—å–∏
                UPDATE family_achievement_stats 
                SET total_achievements = total_achievements + 1,
                    total_points = total_points + achievement_record.points,
                    total_coins_earned = total_coins_earned + achievement_record.coins_reward,
                    last_achievement_at = NOW()
                WHERE family_id = family_id_param;
                
                -- –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏
                achievement_id := achievement_record.id;
                achievement_name := achievement_record.name;
                points := achievement_record.points;
                coins_reward := achievement_record.coins_reward;
                rarity := achievement_record.rarity;
                RETURN NEXT;
            END IF;
        END IF;
    END LOOP;
END;
$$ LANGUAGE plpgsql;

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
CREATE OR REPLACE FUNCTION get_user_achievements(family_id_param INTEGER, user_id_param BIGINT)
RETURNS TABLE (
    achievement_id INTEGER,
    achievement_name TEXT,
    achievement_description TEXT,
    icon TEXT,
    color TEXT,
    rarity TEXT,
    points INTEGER,
    coins_reward INTEGER,
    earned_at TIMESTAMP WITH TIME ZONE
) AS $$
BEGIN
    RETURN QUERY
    SELECT 
        a.id,
        a.name,
        a.description,
        a.icon,
        a.color,
        a.rarity,
        a.points,
        a.coins_reward,
        ua.earned_at
    FROM user_achievements ua
    JOIN achievements a ON ua.achievement_id = a.id
    WHERE ua.family_id = family_id_param 
      AND ua.user_id = user_id_param
    ORDER BY ua.earned_at DESC;
END;
$$ LANGUAGE plpgsql;

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π —Å–µ–º—å–∏
CREATE OR REPLACE FUNCTION get_family_achievement_stats(family_id_param INTEGER)
RETURNS TABLE (
    total_achievements INTEGER,
    total_points INTEGER,
    total_coins_earned INTEGER,
    last_achievement_at TIMESTAMP WITH TIME ZONE,
    top_achiever_user_id BIGINT,
    top_achiever_name TEXT,
    top_achiever_count INTEGER
) AS $$
BEGIN
    RETURN QUERY
    SELECT 
        COALESCE(fas.total_achievements, 0),
        COALESCE(fas.total_points, 0),
        COALESCE(fas.total_coins_earned, 0),
        fas.last_achievement_at,
        top_achiever.user_id,
        top_achiever.name,
        top_achiever.achievement_count
    FROM family_achievement_stats fas
    LEFT JOIN (
        SELECT 
            ua.user_id,
            fm.name,
            COUNT(*) as achievement_count,
            ROW_NUMBER() OVER (ORDER BY COUNT(*) DESC) as rn
        FROM user_achievements ua
        JOIN family_members fm ON ua.family_id = fm.family_id AND ua.user_id = fm.user_id
        WHERE ua.family_id = family_id_param
        GROUP BY ua.user_id, fm.name
        ORDER BY COUNT(*) DESC
        LIMIT 1
    ) top_achiever ON true
    WHERE fas.family_id = family_id_param;
END;
$$ LANGUAGE plpgsql;

-- –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏
SELECT '–°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!' as message;
