-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—É—à-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö
-- –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—Å–µ–º —á–ª–µ–Ω–∞–º —Å–µ–º—å–∏ –æ –Ω–æ–≤—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö

CREATE OR REPLACE FUNCTION send_achievement_notifications(
    family_id_param INTEGER,
    achievement_data JSONB
)
RETURNS TABLE (
    notification_sent BOOLEAN,
    user_id BIGINT,
    user_name TEXT,
    message TEXT
) AS $$
DECLARE
    family_member RECORD;
    achievement_name TEXT;
    achievement_points INTEGER;
    achievement_coins INTEGER;
    achievement_rarity TEXT;
    notification_message TEXT;
BEGIN
    -- –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏
    achievement_name := achievement_data->>'achievement_name';
    achievement_points := (achievement_data->>'points')::INTEGER;
    achievement_coins := (achievement_data->>'coins_reward')::INTEGER;
    achievement_rarity := achievement_data->>'rarity';
    
    -- –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    notification_message := 'üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –ü–æ–ª—É—á–µ–Ω–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ: ' || achievement_name || 
                          ' (' || achievement_points || ' –æ—á–∫–æ–≤, ' || achievement_coins || ' –º–æ–Ω–µ—Ç)';
    
    -- –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º —á–ª–µ–Ω–∞–º —Å–µ–º—å–∏
    FOR family_member IN 
        SELECT fm.user_id, fm.name, fm.role
        FROM family_members fm
        WHERE fm.family_id = family_id_param
    LOOP
        -- –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—É—à-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        -- –ù–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ Supabase Edge Functions –∏–ª–∏ –≤–Ω–µ—à–Ω–∏–π —Å–µ—Ä–≤–∏—Å
        
        -- –ü–æ–∫–∞ —á—Ç–æ –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, —á—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
        notification_sent := TRUE;
        user_id := family_member.user_id;
        user_name := family_member.name;
        message := notification_message;
        RETURN NEXT;
    END LOOP;
END;
$$ LANGUAGE plpgsql;

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
CREATE OR REPLACE FUNCTION get_achievement_notifications(
    family_id_param INTEGER,
    user_id_param BIGINT,
    limit_count INTEGER DEFAULT 10
)
RETURNS TABLE (
    achievement_id INTEGER,
    achievement_name TEXT,
    achievement_description TEXT,
    icon TEXT,
    color TEXT,
    rarity TEXT,
    points INTEGER,
    coins_reward INTEGER,
    earned_at TIMESTAMP WITH TIME ZONE,
    is_new BOOLEAN
) AS $$
BEGIN
    RETURN QUERY
    SELECT 
        a.id,
        a.name,
        a.description,
        a.icon,
        a.color,
        a.rarity,
        a.points,
        a.coins_reward,
        ua.earned_at,
        CASE 
            WHEN ua.earned_at >= NOW() - INTERVAL '1 hour' THEN TRUE
            ELSE FALSE
        END as is_new
    FROM user_achievements ua
    JOIN achievements a ON ua.achievement_id = a.id
    WHERE ua.family_id = family_id_param 
      AND ua.user_id = user_id_param
    ORDER BY ua.earned_at DESC
    LIMIT limit_count;
END;
$$ LANGUAGE plpgsql;

-- –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–π
SELECT '–§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö —Å–æ–∑–¥–∞–Ω—ã!' as message;
