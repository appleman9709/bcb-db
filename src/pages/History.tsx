import { useState } from 'react'
import Card from '../components/Card'
import Button from '../components/Button'

export default function History() {
  const [selectedPeriod, setSelectedPeriod] = useState('today')

  const mockData = [
    { id: 1, type: 'feeding', time: '14:30', amount: '150 –º–ª', icon: 'üçº', color: 'blue' },
    { id: 2, type: 'diaper', time: '13:45', amount: '–ú–æ–∫—Ä—ã–π', icon: 'üë∂', color: 'green' },
    { id: 3, type: 'sleep', time: '12:00', amount: '1—á 30–º', icon: 'üò¥', color: 'purple' },
    { id: 4, type: 'feeding', time: '11:15', amount: '120 –º–ª', icon: 'üçº', color: 'blue' },
    { id: 5, type: 'play', time: '10:30', amount: '30 –º–∏–Ω', icon: 'üéØ', color: 'yellow' },
    { id: 6, type: 'diaper', time: '09:20', amount: '–°—É—Ö–æ–π', icon: 'üë∂', color: 'green' },
  ]

  const getTypeLabel = (type: string) => {
    const labels: { [key: string]: string } = {
      feeding: '–ö–æ—Ä–º–ª–µ–Ω–∏–µ',
      diaper: '–°–º–µ–Ω–∞ –ø–æ–¥–≥—É–∑–Ω–∏–∫–∞',
      sleep: '–°–æ–Ω',
      play: '–ò–≥—Ä–∞',
      medicine: '–õ–µ–∫–∞—Ä—Å—Ç–≤–æ',
      note: '–ó–∞–º–µ—Ç–∫–∞'
    }
    return labels[type] || type
  }

  const getColorClasses = (color: string) => {
    const colors: { [key: string]: string } = {
      blue: 'bg-blue-50 border-blue-200',
      green: 'bg-green-50 border-green-200',
      purple: 'bg-purple-50 border-purple-200',
      yellow: 'bg-yellow-50 border-yellow-200',
      pink: 'bg-pink-50 border-pink-200'
    }
    return colors[color] || 'bg-gray-50 border-gray-200'
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 p-6">
      <div className="max-w-7xl mx-auto">
        {/* Header */}
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-900 mb-2">–ò—Å—Ç–æ—Ä–∏—è —Å–æ–±—ã—Ç–∏–π üìä</h1>
          <p className="text-gray-600">–ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ –≤—Å–µ –∑–∞–ø–∏—Å–∏ –æ –≤–∞—à–µ–º –º–∞–ª—ã—à–µ</p>
        </div>

        {/* Period Filter */}
        <div className="mb-6">
          <div className="flex space-x-2">
            {[
              { key: 'today', label: '–°–µ–≥–æ–¥–Ω—è' },
              { key: 'week', label: '–ù–µ–¥–µ–ª—è' },
              { key: 'month', label: '–ú–µ—Å—è—Ü' },
              { key: 'all', label: '–í—Å–µ –≤—Ä–µ–º—è' }
            ].map((period) => (
              <Button
                key={period.key}
                variant={selectedPeriod === period.key ? 'primary' : 'secondary'}
                size="sm"
                onClick={() => setSelectedPeriod(period.key)}
              >
                {period.label}
              </Button>
            ))}
          </div>
        </div>

        {/* Stats Summary */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
          <Card className="text-center">
            <div className="text-2xl font-bold text-blue-600 mb-1">8</div>
            <div className="text-sm text-gray-600">–ö–æ—Ä–º–ª–µ–Ω–∏–π</div>
          </Card>
          <Card className="text-center">
            <div className="text-2xl font-bold text-green-600 mb-1">6</div>
            <div className="text-sm text-gray-600">–°–º–µ–Ω –ø–æ–¥–≥—É–∑–Ω–∏–∫–∞</div>
          </Card>
          <Card className="text-center">
            <div className="text-2xl font-bold text-purple-600 mb-1">3</div>
            <div className="text-sm text-gray-600">–ü–µ—Ä–∏–æ–¥–∞ —Å–Ω–∞</div>
          </Card>
          <Card className="text-center">
            <div className="text-2xl font-bold text-yellow-600 mb-1">2</div>
            <div className="text-sm text-gray-600">–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</div>
          </Card>
        </div>

        {/* Timeline */}
        <Card>
          <div className="flex items-center justify-between mb-6">
            <h2 className="text-xl font-semibold text-gray-900">–•—Ä–æ–Ω–æ–ª–æ–≥–∏—è —Å–æ–±—ã—Ç–∏–π</h2>
            <Button variant="secondary" size="sm">
              üì• –≠–∫—Å–ø–æ—Ä—Ç
            </Button>
          </div>
          
          <div className="space-y-4">
            {mockData.map((item, index) => (
              <div key={item.id} className="flex items-center space-x-4 p-4 rounded-xl border-2 transition-all duration-200 hover:shadow-md">
                <div className="flex-shrink-0">
                  <div className={`w-12 h-12 rounded-full flex items-center justify-center text-white text-lg shadow-lg bg-gradient-to-r ${
                    item.color === 'blue' ? 'from-blue-500 to-blue-600' :
                    item.color === 'green' ? 'from-green-500 to-green-600' :
                    item.color === 'purple' ? 'from-purple-500 to-purple-600' :
                    item.color === 'yellow' ? 'from-yellow-500 to-yellow-600' :
                    'from-gray-500 to-gray-600'
                  }`}>
                    {item.icon}
                  </div>
                </div>
                
                <div className="flex-1 min-w-0">
                  <div className="flex items-center justify-between">
                    <h3 className="text-lg font-medium text-gray-900">{getTypeLabel(item.type)}</h3>
                    <span className="text-sm font-medium text-gray-500">{item.time}</span>
                  </div>
                  <p className="text-sm text-gray-600 mt-1">{item.amount}</p>
                </div>
                
                <div className="flex-shrink-0">
                  <Button variant="secondary" size="sm">
                    ‚úèÔ∏è
                  </Button>
                </div>
              </div>
            ))}
          </div>
        </Card>

        {/* Charts Placeholder */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 mt-8">
          <Card>
            <h3 className="text-lg font-semibold text-gray-900 mb-4">–ì—Ä–∞—Ñ–∏–∫ –∫–æ—Ä–º–ª–µ–Ω–∏–π</h3>
            <div className="h-64 bg-gradient-to-r from-blue-100 to-blue-200 rounded-xl flex items-center justify-center">
              <div className="text-center text-gray-600">
                <div className="text-4xl mb-2">üìà</div>
                <p>–ì—Ä–∞—Ñ–∏–∫ –±—É–¥–µ—Ç –∑–¥–µ—Å—å</p>
              </div>
            </div>
          </Card>
          
          <Card>
            <h3 className="text-lg font-semibold text-gray-900 mb-4">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–Ω–∞</h3>
            <div className="h-64 bg-gradient-to-r from-purple-100 to-purple-200 rounded-xl flex items-center justify-center">
              <div className="text-center text-gray-600">
                <div className="text-4xl mb-2">üìä</div>
                <p>–î–∏–∞–≥—Ä–∞–º–º–∞ –±—É–¥–µ—Ç –∑–¥–µ—Å—å</p>
              </div>
            </div>
          </Card>
        </div>
      </div>
    </div>
  )
}
