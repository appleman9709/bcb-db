import React from 'react'
import type { Tip } from '../../services/dataService'
import { calculateAgeInMonths } from '../../utils/dashboardHelpers'
import type { SettingsState } from '../../types/dashboard'

interface SettingsTabProps {
  dailyTip: Tip | null
  settings: SettingsState
  onSettingChange: <K extends keyof SettingsState>(key: K, value: SettingsState[K]) => void
  onSaveSettings: () => void
  familyName?: string
  memberDisplayName?: string
  onSignOut: () => void
}

const SettingsTab: React.FC<SettingsTabProps> = ({
  dailyTip,
  settings,
  onSettingChange,
  onSaveSettings,
  familyName,
  memberDisplayName,
  onSignOut
}) => {
  return (
    <div className="space-y-3">
      <div className="text-center">
        <h1 className="text-lg font-bold text-gray-900 mb-1">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</h1>
        <p className="text-xs text-gray-600">–£–ø—Ä–∞–≤–ª—è–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏</p>
      </div>

      {/* –°–æ–≤–µ—Ç –¥–Ω—è */}
      {dailyTip && (
        <div className="bg-gradient-to-r from-blue-50 to-purple-50 rounded-3xl p-2.5 shadow-sm border border-blue-100 iphone14-tip">
          <div className="flex items-center gap-2">
            <div className="w-10 h-10 flex items-center justify-center iphone14-tip-icon">
              <img src="/icons/sovet.png" alt="–°–æ–≤–µ—Ç" className="w-10 h-10 object-contain" />
            </div>
            <div className="flex-1">
              <h3 className="text-base font-semibold text-gray-900 mb-1">–°–æ–≤–µ—Ç –¥–Ω—è</h3>
              <p className="text-xs text-gray-700 mb-1">{dailyTip.content}</p>
              <div className="flex flex-wrap gap-1 text-xs text-gray-500">
                <span className="bg-white px-1.5 py-0.5 rounded-3xl">üìå {dailyTip.category}</span>
                <span className="bg-white px-1.5 py-0.5 rounded-3xl">üë∂ {dailyTip.age_months} –º–µ—Å.</span>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è */}
      <div className="bg-white rounded-3xl p-3 shadow-sm border border-gray-100 iphone14-card">
        <div className="text-center mb-2">
          <h2 className="text-base font-semibold text-gray-900">–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è</h2>
        </div>
        <div className="space-y-2">
          <div className="date-input-container">
            <label className="block text-xs font-medium text-gray-700 mb-1">
              üìÖ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è
            </label>
            <div className="relative">
              <input
                type="date"
                value={settings.birthDate}
                onChange={(event) => onSettingChange('birthDate', event.target.value)}
                className="w-full text-center"
                inputMode="numeric"
                autoComplete="bday"
                placeholder=""
                aria-label="–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è —Ä–µ–±—ë–Ω–∫–∞"
                aria-describedby="birth-date-description"
              />
              <div className="focus-ring"></div>
            </div>
            <div id="birth-date-description" className="age-description">
              <span className="age-indicator"></span>
              <span>
                –í–æ–∑—Ä–∞—Å—Ç:{' '}
                <span className="age-value">{calculateAgeInMonths(settings.birthDate)} –º–µ—Å—è—Ü–µ–≤</span>
              </span>
            </div>
          </div>
        </div>
      </div>

      {/* –ò–Ω—Ç–µ—Ä–≤–∞–ª—ã */}
      <div className="bg-white rounded-3xl p-3 shadow-sm border border-gray-100 iphone14-card">
        <div className="text-center mb-2">
          <h2 className="text-base font-semibold text-gray-900">–ò–Ω—Ç–µ—Ä–≤–∞–ª—ã</h2>
        </div>
        <div className="space-y-3">
          <div className="modern-slider-card">
            <div className="slider-header">
              <div>üçº</div>
              <div className="slider-info">
                <h3 className="slider-title">–ö–æ—Ä–º–ª–µ–Ω–∏–µ</h3>
                <p className="slider-description">–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –∫–æ—Ä–º–ª–µ–Ω–∏–∏ –∫–∞–∂–¥—ã–µ 2-3 —á–∞—Å–∞ –¥–ª—è –º–∞–ª—ã—à–∞</p>
              </div>
              <div className="slider-value-badge">
                <span className="value-number">{settings.feedingInterval}</span>
                <span className="value-unit">—á</span>
              </div>
            </div>

            <div className="slider-wrapper">
              <div className="slider-track-container">
                <div className="slider-track">
                  <div
                    className="slider-progress feeding-progress"
                    style={{ width: `${((settings.feedingInterval - 1) / 5) * 100}%` }}
                  ></div>
                </div>
                <input
                  type="range"
                  min="1"
                  max="6"
                  value={settings.feedingInterval}
                  onChange={(event) => onSettingChange('feedingInterval', Number(event.target.value))}
                  className="modern-slider"
                />
              </div>
            </div>
          </div>

          <div className="modern-slider-card">
            <div className="slider-header">
              <div>üë∂</div>
              <div className="slider-info">
                <h3 className="slider-title">–ü–æ–¥–≥—É–∑–Ω–∏–∫–∏</h3>
                <p className="slider-description">–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –ø–æ–¥–≥—É–∑–Ω–∏–∫–∞—Ö –∫–∞–∂–¥—ã–µ 2-3 —á–∞—Å–∞ –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–∞</p>
              </div>
              <div className="slider-value-badge">
                <span className="value-number">{settings.diaperInterval}</span>
                <span className="value-unit">—á</span>
              </div>
            </div>

            <div className="slider-wrapper">
              <div className="slider-track-container">
                <div className="slider-track">
                  <div
                    className="slider-progress diaper-progress"
                    style={{ width: `${((settings.diaperInterval - 1) / 5) * 100}%` }}
                  ></div>
                </div>
                <input
                  type="range"
                  min="1"
                  max="6"
                  value={settings.diaperInterval}
                  onChange={(event) => onSettingChange('diaperInterval', Number(event.target.value))}
                  className="modern-slider"
                />
              </div>
            </div>
          </div>

          <div className="modern-slider-card">
            <div className="slider-header">
              <div>üõÅ</div>
              <div className="slider-info">
                <h3 className="slider-title">–ö—É–ø–∞–Ω–∏–µ</h3>
                <p className="slider-description">–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –∫—É–ø–∞–Ω–∏–∏ 2-3 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é –¥–ª—è –≥–∏–≥–∏–µ–Ω—ã</p>
              </div>
              <div className="slider-value-badge">
                <span className="value-number">{settings.bathInterval}</span>
                <span className="value-unit">–¥–Ω</span>
              </div>
            </div>

            <div className="slider-wrapper">
              <div className="slider-track-container">
                <div className="slider-track">
                  <div
                    className="slider-progress bath-progress"
                    style={{ width: `${((settings.bathInterval - 1) / 6) * 100}%` }}
                  ></div>
                </div>
                <input
                  type="range"
                  min="1"
                  max="7"
                  value={settings.bathInterval}
                  onChange={(event) => onSettingChange('bathInterval', Number(event.target.value))}
                  className="modern-slider"
                />
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* –°–µ–º—å—è –∏ –ø—Ä–æ—Ñ–∏–ª—å */}
      <div className="bg-white rounded-3xl p-3 shadow-sm border border-gray-100 iphone14-card">
        <div className="flex items-center gap-2 mb-2">
          <div className="w-8 h-8 flex items-center justify-center text-sm">
            üë®‚Äçüë©‚Äçüëß‚Äçüë¶
          </div>
          <h2 className="text-base font-semibold text-gray-900">–°–µ–º—å—è –∏ –ø—Ä–æ—Ñ–∏–ª—å</h2>
        </div>
        <div className="space-y-2">
          <div className="flex justify-between items-center p-2 bg-gray-50 rounded-3xl">
            <div>
              <p className="text-xs font-medium text-gray-900">–°–µ–º—å—è</p>
              <p className="text-xs text-gray-500">–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–π —Å–µ–º—å–∏</p>
            </div>
            <span className="text-xs font-medium text-gray-700">{familyName ?? 'Family'}</span>
          </div>
          <div className="flex justify-between items-center p-2 bg-gray-50 rounded-3xl">
            <div>
              <p className="text-xs font-medium text-gray-900">–í–∞—à–µ –∏–º—è</p>
              <p className="text-xs text-gray-500">–ò–º—è —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤ —Å–µ–º—å–µ</p>
            </div>
            <span className="text-xs font-medium text-gray-700">{memberDisplayName}</span>
          </div>
          <button
            onClick={onSignOut}
            className="w-full mt-2 px-3 py-1.5 bg-red-500 text-white rounded-3xl hover:bg-red-600 transition-colors font-medium text-xs"
          >
            üö™ –í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞
          </button>
        </div>
      </div>

      {/* –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
      <button
        onClick={onSaveSettings}
        className="w-full bg-gradient-to-r from-blue-500 to-purple-600 text-white font-semibold py-2 px-4 rounded-3xl shadow-lg hover:from-blue-600 hover:to-purple-700 transition-all duration-200 text-sm"
      >
        üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
      </button>

      {/* –û—Ç—Å—Ç—É–ø –¥–ª—è –Ω–∏–∂–Ω–µ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
      <div className="h-32"></div>
    </div>
  )
}

export default SettingsTab
